{"version":3,"sources":["components/Calculator/Calculator.js","components/Calculator/Items/Numberrow.js","components/Calculator/Items/Button.js","components/Calculator/Items/Numberpad.js","components/Calculator/Items/Result.js","components/Calculator/Items/Equation.js","components/Calculator/Items/Screen.js","App.js","index.js"],"names":["Calculator","state","equation","result","onButtonPress","event","_this","pressedButton","target","innerHTML","clear","indexOf","evalResult","eval","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Items_Screen__WEBPACK_IMPORTED_MODULE_6__","_Items_Numberpad__WEBPACK_IMPORTED_MODULE_7__","React","Component","numberrow","props","react_default","children","button","onClick","numberpad","Numberrow","Button","role","aria-label","resultScreen","screen","Result","Equation","app","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.bdc29c38.chunk.js","sourcesContent":["/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Calculator.js\r\n * Description: This component will be our 'main' calculator component. It will be made of a series of calculator items.\r\n *\r\n *\r\n */\r\nimport React from 'react';\r\nimport Screen from './Items/Screen';\r\nimport Numberpad from './Items/Numberpad';\r\n\r\nclass Calculator extends React.Component {\r\n    state = {\r\n        equation: '',\r\n        result: 0\r\n    };\r\n\r\n    //Start of Calculator Events\r\n    //I would redo all of this logic if I had to do it again, and make it way prettier.\r\n    onButtonPress = event => {\r\n        let equation = this.state.equation;\r\n        const pressedButton = event.target.innerHTML;\r\n\r\n        if (pressedButton === 'C') return this.clear(); //If C is pressed, reset state.\r\n        //else if (pressedButton===üëΩ) this.setState(\"Why did you press the Alien?\"); //Sadly you can't check equality on emojis.\r\n        else if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') equation += pressedButton; //If pressed button is 0 through 9 or decimal, add them to equation\r\n        else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' '; //If pressed button is other, add to equation, add space between\r\n        else if (pressedButton === '=') {\r\n            try {\r\n                const evalResult = eval(equation); //Perform the actual math equation\r\n                const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\r\n                this.setState({result});\r\n            } catch (error) {\r\n                alert('Error! You entered an invalid equation. Please clear and try again.');\r\n            }\r\n        }\r\n        else {\r\n            equation = equation.trim();\r\n            equation = equation.substr(0, equation.length - 1);\r\n        }\r\n\r\n        this.setState({equation: equation});\r\n    }\r\n    clear() {\r\n        this.setState({equation: '', result: 0});\r\n    }\r\n\r\n    //End of calculator events\r\n    render() {\r\n        return (\r\n            <main className=\"calculator\">\r\n                <Screen equation={this.state.equation} result={this.state.result} /> {/* Screen will take on equation and result values*/}\r\n                <Numberpad onButtonPress={this.onButtonPress} />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n\r\n","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Button.js\r\n * Description: Row component for the numberpad.\r\n */\r\n\r\nimport React from 'react';\r\nconst numberrow = (props) => (\r\n    <div className=\"numberrow\">\r\n        {props.children}\r\n    </div>\r\n);\r\nexport default numberrow;","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Button.js\r\n * Description: Individual buttons which make up the numberpad.\r\n */\r\nimport React from 'react';\r\n\r\n\r\nconst button = (props) => (\r\n\r\n    <button className=\"button\" onClick={props.onButtonPress}>\r\n\r\n        {props.children}\r\n\r\n    </button>\r\n);\r\n\r\nexport default button;\r\n\r\n\r\n\r\n//This code was attempting to allow a 'large' type button with specifier Button type=\"large\"\r\n/*\r\nconst button = (props) => {\r\n\r\n    const classes = ['button'];\r\n    if (typeof props !== 'undefined' && typeof props.type !== 'undefined')\r\n        classes.push('button--' + props.type);\r\n    return (\r\n        <button className={classes.join(' ')}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n*/\r\n\r\n\r\n","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Button.js\r\n * Description: Whole numberpad which will hold numberrow and button components\r\n */\r\nimport React from 'react';\r\nimport Numberrow from './Numberrow';\r\nimport Button from './Button';\r\nconst numberpad = (props) => (\r\n    <section className=\"numberpad\">\r\n\r\n        {/* row 1 of keypad */}\r\n        <Numberrow >\r\n            <Button onButtonPress={props.onButtonPress}>C</Button>\r\n            <Button onButtonPress={props.onButtonPress}>&lArr;</Button>\r\n            <Button onButtonPress={props.onButtonPress}>%</Button>\r\n            <Button onButtonPress={props.onButtonPress}>/</Button>\r\n        </Numberrow>\r\n\r\n        {/* row 2 of keypad */}\r\n        <Numberrow >\r\n            <Button onButtonPress={props.onButtonPress}>7</Button>\r\n            <Button onButtonPress={props.onButtonPress}>8</Button>\r\n            <Button onButtonPress={props.onButtonPress}>9</Button>\r\n            <Button onButtonPress={props.onButtonPress}>*</Button>\r\n        </Numberrow>\r\n\r\n        {/* row 3 of keypad */}\r\n        <Numberrow >\r\n            <Button onButtonPress={props.onButtonPress}>4</Button>\r\n            <Button onButtonPress={props.onButtonPress}>5</Button>\r\n            <Button onButtonPress={props.onButtonPress}>6</Button>\r\n            <Button onButtonPress={props.onButtonPress}>-</Button>\r\n        </Numberrow>\r\n\r\n        {/* row 4 of keypad */}\r\n        <Numberrow >\r\n            <Button onButtonPress={props.onButtonPress}>1</Button>\r\n            <Button onButtonPress={props.onButtonPress}>2</Button>\r\n            <Button onButtonPress={props.onButtonPress}>3</Button>\r\n            <Button onButtonPress={props.onButtonPress}>+</Button>\r\n        </Numberrow>\r\n\r\n        {/* row 5 of keypad */}\r\n        <Numberrow >\r\n            <Button /*onButtonPress={props.onButtonPress}*/><span role=\"img\" aria-label=\"Pineapple\">üçç</span></Button>\r\n            <Button onButtonPress={props.onButtonPress}>0</Button>\r\n            <Button onButtonPress={props.onButtonPress}>.</Button>\r\n            <Button onButtonPress={props.onButtonPress}>=</Button>\r\n        </Numberrow>\r\n    </section>\r\n);\r\nexport default numberpad;","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Result.js\r\n * Description: This component will display the results of the calculator.\r\n *\r\n *\r\n */\r\n\r\nimport React from 'react';\r\n\r\nconst resultScreen = (props) => (\r\n    <div className=\"result\">\r\n        {props.children}\r\n    </div>\r\n);\r\nexport default resultScreen;","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Equation.js\r\n * Description: This component will contain the math equation that is being computed.\r\n *\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nconst equation = (props) => (\r\n    <div className=\"equation\">\r\n        {props.children}\r\n    </div>\r\n);\r\nexport default equation;","/**\r\n * @author Jacob Ramsaywak\r\n * @version March 14, 2019\r\n *\r\n * Filename: Screen.js\r\n * Description: The main 'screen' component which will hold Result and Buttons.\r\n *\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport Result from './Result';\r\nimport Buttons from './Equation';\r\nconst screen = (props) => (\r\n    <section className=\"screen\">\r\n        <Result>{props.result}</Result>\r\n        <Buttons>{props.equation}</Buttons>\r\n    </section>\r\n);\r\nexport default screen;","/**\n * @author Jacob Ramsaywak\n * @version March 14, 2019\n *\n * Filename: App.js\n * Description: Main React App file\n *\n *\n */\n\nimport React from 'react';\nimport './styles/styles.css';\nimport Calculator from './components/Calculator/Calculator';\n\n\n\n\nconst app = () => (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n\n\n);\nexport default app;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}